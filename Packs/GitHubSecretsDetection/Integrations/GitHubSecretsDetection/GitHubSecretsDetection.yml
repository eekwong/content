category: Utilities
commonfields:
  id: GitHubSecretsDetection
  version: -1
configuration:
- display: GitHub Deployment Type
  name: github_deploy
  defaultvalue: GitHub.com
  type: 15
  required: true
  options:
  - GitHub.com
  - GitHub Enterprise
- defaultvalue: https://github.com/demisto/content
  display: Git remote URL with HTTPS
  name: git_remote_url
  required: true
  type: 0
- display: Personal Access Token
  name: access_token
  required: false
  type: 4
- display: Incident type
  name: incidentType
  required: false
  type: 13
- display: Fetch incidents
  name: isFetch
  required: false
  type: 8
- defaultvalue: master
  display: Git branch to check
  name: branch
  required: true
  type: 0
- defaultvalue: '100'
  display: Maximum number of commits to check secrets for the first fetch or the last commit is not found
  name: num_commits
  required: false
  type: 0
- display: File path and Secret patterns
  name: config
  defaultvalue: |
    {
        "file-path": {
            "Private SSH key rsa": ".+_rsa(_pub)?$",
            "Private SSH key dsa": ".+_dsa$",
            "Private SSH key ed25519": ".+_ed25519$",
            "Private SSH key ecdsa": ".+_ecdsa$",
            "SSH configuration file": "ssh\\/config$",
            "Shell command history file": "(bash_|zsh_|sh_|z)history$",
            "MySQL client command history file": "mysql_history$",
            "PostgreSQL client command history file": "psql_history$",
            "PostgreSQL password file": "pgpass$",
            "Ruby IRB console history file": "irb_history$",
            "Irssi IRC client configuration file": "irssi/config$",
            "Mutt e-mail client configuration file": "muttrc$",
            "S3cmd configuration file": "s3cfg$",
            "AWS CLI credentials file": "aws\\/credentials$",
            "SFTP connection configuration file": "sftp-config(\\.json)?",
            "T command-line Twitter client configuration file": "trc$",
            "Shell configuration file": "(bash|zsh|csh)rc$",
            "Shell profile configuration file": "(bash_|zsh_)?profile$",
            "Shell command alias configuration file": "(bash_|zsh_)?aliases$",
            "GNOME Keyring database file": "key(stone|ring)$",
            "KeePass password manager database file": "kdbx?$",
            "SQL dump file": "sql(dump)?$",
            "Apache htpasswd file": "htpasswd$",
            "Configuration file for auto-login process": "netrc$",
            "Rubygems credentials file": "gem/credentials$",
            "Tugboat DigitalOcean management tool configuration": "tugboat$",
            "git-credential-store helper credentials file": "git-credentials$",
            "GitHub Hub command-line client configuration file": "config\\/hub$",
            "Git configuration file": "gitconfig$",
            "Potential Linux shadow file": "etc\\/shadow$",
            "Potential Linux passwd file": "etc\\/passwd$",
            "Docker configuration file": "dockercfg$",
            "NPM configuration file": "npmrc$",
            "Environment configuration file": "env$",
            "esmtp configuration": "esmtprc$",
            "sftp-deployment for Atom": "ftpconfig$"
        },
        "file-extension": {
            "pem": {
                "Potential cryptographic private key": "\\.pem$",
                "Chef private key": "chef\\/(.*)\\.pem$"
            },
            "log": {
                "Log file": "\\.log$"
            },
            "pkcs12": {
                "Potential cryptographic key bundle": "\\.pkcs12$"
            },
            "p12": {
                "Potential cryptographic key bundle": "\\.p12$"
            },
            "pfx": {
                "Potential cryptographic key bundle": "\\.pfx$"
            },
            "asc": {
                "Potential cryptographic key bundle": "\\.asc$"
            },
            "private_key": {
                "Pidgin OTR private key": "otr\\.private_key$"
            },
            "ovpn": {
                "OpenVPN client configuration file": "\\.ovpn$"
            },
            "cscfg": {
                "Azure service configuration schema file": "\\.cscfg$"
            },
            "rdp": {
                "Remote Desktop connection file": "\\.rdp$"
            },
            "mdf": {
                "Microsoft SQL database file": "\\.mdf$"
            },
            "sdf": {
                "Microsoft SQL server compact database file": "\\.sdf$"
            },
            "sqlite": {
                "SQLite database file": "\\.sqlite$"
            },
            "sqlite3": {
                "SQLite3 database file": "\\.sqlite3$"
            },
            "bek": {
                "Microsoft BitLocker recovery key file": "\\.bek$"
            },
            "tpm": {
                "Microsoft BitLocker Trusted Platform Module password file": "\\.tpm$"
            },
            "fve": {
                "Windows BitLocker full volume encrypted data file": "\\.fve$"
            },
            "jks": {
                "Java keystore file": "\\.jks$"
            },
            "psafe3": {
                "Password Safe database file": "\\.psafe3$"
            },
            "rb": {
                "Ruby On Rails secret token configuration file": "secret_token\\.rb$",
                "Carrierwave configuration file": "carrierwave\\.rb$",
                "OmniAuth configuration file": "omniauth\\.rb$",
                "Chef Knife configuration file": "knife\\.rb$"
            },
            "yml": {
                "Potential Ruby On Rails database configuration file": "database\\.yml$",
                "Mongoid config file": "mongoid\\.yml",
                "Ruby on rails secrets.yml file": "web.+ruby.+secrets\\.yml$"
            },
            "py": {
                "Django configuration file": "settings\\.py$"
            },
            "agilekeychain": {
                "1Password password manager database file": "\\.agilekeychain$"
            },
            "keychain": {
                "Apple Keychain database file": "\\.keychain$"
            },
            "pcap": {
                "Network traffic capture file": "\\.pcap$"
            },
            "gnucash": {
                "GnuCash database file": "\\.gnucash$"
            },
            "xml": {
                "Jenkins publish over SSH plugin file": "jenkins\\.plugins\\.publish_over_ssh\\.BapSshPublisherPlugin\\.xml$",
                "Potential Jenkins credentials file": "credentials\\.xml$",
                "FileZilla FTP configuration file": "filezilla\\.xml$",
                "FileZilla FTP recent servers file": "recentservers\\.xml$",
                "Pidgin chat client account configuration file": "purple\\/accounts\\.xml$",
                "DBeaver SQL database manager configuration file": "dbeaver-data-sources\\.xml$",
                "Jetbrains IDEs webserver credentials": "idea.+WebServers\\.xml$"
            },
            "kwallet": {
                "KDE Wallet Manager database file": "\\.kwallet$"
            },
            "php": {
                "Potential MediaWiki configuration file": "LocalSettings\\.php$",
                "PHP configuration file": "config(\\.inc)?\\.php$"
            },
            "tblk": {
                "Tunnelblick VPN configuration file": "\\.tblk$"
            },
            "plist": {
                "Sequel Pro MySQL database manager bookmark file": "Favorites\\.plist$"
            },
            "xpl": {
                "Little Snitch firewall configuration file": "configuration\\.user\\.xpl$"
            },
            "dayone": {
                "Day One journal file": "\\.dayone$"
            },
            "txt": {
                "Potential jrnl journal file": "journal\\.txt$"
            },
            "proftpdpasswd": {
                "cPanel backup ProFTPd credentials file": "proftpdpasswd$"
            },
            "json": {
                "Robomongo MongoDB manager configuration file": "robomongo\\.json$",
                "Heroku config file": "heroku\\.json$",
                "remote-sync for Atom": "remote-sync\\.json$",
                "sftp-deployment for Atom": "deployment-config\\.json$",
                "vscode-sftp for VSCode": "vscode.+sftp\\.json$",
                "Docker registry authentication file": "docker.+config\\.json$",
                "Firefox saved password collection": "mozilla.+firefox.+logins\\.json$"
            },
            "ini": {
                "Ventrilo server configuration file": "ventrilo_srv\\.ini$"
            },
            "tfvars": {
                "Terraform variable config file": "terraform\\.tfvars$"
            },
            "exports": {
                "Shell configuration file": "\\.exports$"
            },
            "functions": {
                "Shell configuration file": "\\.functions$"
            },
            "extra": {
                "Shell configuration file": "\\.extra$"
            },
            "key": {
                "Potential cryptographic private key": "\\.key$"
            },
            "keypair": {
                "Potential cryptographic private key": "\\.keypair$"
            },
            "conf": {
                "Hexchat/XChat IRC client server list configuration file": "xchat2?\\/servlist_?\\.conf"
            },
            "db": {
                "Recon-ng web reconnaissance framework API key database": "recon-ng\\/keys\\.db$"
            },
            "yaml": {
                "DigitalOcean doctl command-line client configuration file": "doctl\\/config.yaml$"
            },
            "ppk": {
                "Potential PuTTYgen private key": "\\.ppk$"
            },
            "sqldump": {
                "SQL Data dump file": "\\.sqldump$"
            },
            "sql": {
                "MySQL dump w/ bcrypt hashes": "dump\\.sql$"
            },
            "js": {
                "Salesforce credentials in a nodejs project": "salesforce\\.js$"
            }
        },
        "trufflehog": {
            "Slack Token": "(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})",
            "RSA private key": "-----BEGIN RSA PRIVATE KEY-----",
            "SSH (DSA) private key": "-----BEGIN DSA PRIVATE KEY-----",
            "SSH (EC) private key": "-----BEGIN EC PRIVATE KEY-----",
            "SSH (OPENSSH) private key": "-----BEGIN OPENSSH PRIVATE KEY-----",
            "PGP private key block": "-----BEGIN PGP PRIVATE KEY BLOCK-----",
            "Amazon AWS Access Key ID": "AKIA[0-9A-Z]{16}",
            "Amazon MWS Auth Token": "amzn\\.mws\\.[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
            "Artifactory": "(?i)artifactory.{0,50}(\\\"|'|`)?[a-zA-Z0-9=]{112}(\\\"|'|`)?",
            "AWS API Key": "AKIA[0-9A-Z]{16}",
            "AWS Access Key ID Value": "(A3T[A-Z0-9]|AKIA|AGPA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}",
            "AWS Access Key ID": "((\\\"|'|`)?((?i)aws)?_?((?i)access)_?((?i)key)?_?((?i)id)?(\\\"|'|`)?\\\\s{0,50}(:|=>|=)\\\\s{0,50}(\\\"|'|`)?(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}(\\\"|'|`)?)",
            "AWS Account ID": "((\\\"|'|`)?((?i)aws)?_?((?i)account)_?((?i)id)?(\\\"|'|`)?\\\\s{0,50}(:|=>|=)\\\\s{0,50}(\\\"|'|`)?[0-9]{4}-?[0-9]{4}-?[0-9]{4}(\\\"|'|`)?)",
            "AWS Cred File Info": "(?i)(aws_access_key_id|aws_secret_access_key)(.{0,20})?=.[0-9a-zA-Z\\/+]{20,40}",
            "AWS Secret Access Key": "((\\\"|'|`)?((?i)aws)?_?((?i)secret)_?((?i)access)?_?((?i)key)?_?((?i)id)?(\\\"|'|`)?\\\\s{0,50}(:|=>|=)\\\\s{0,50}(\\\"|'|`)?[A-Za-z0-9/+=]{40}(\\\"|'|`)?)",
            "AWS Session Token": "((\\\"|'|`)?((?i)aws)?_?((?i)session)?_?((?i)token)?(\\\"|'|`)?\\\\s{0,50}(:|=>|=)\\\\s{0,50}(\\\"|'|`)?[A-Za-z0-9/+=]{16,}(\\\"|'|`)?)",
            "CodeClimate": "(?i)codeclima.{0,50}(\\\"|'|`)?[0-9a-f]{64}(\\\"|'|`)?",
            "Facebook Access Token": "EAACEdEose0cBA[0-9A-Za-z]+",
            "Facebook OAuth": "[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*['|\"][0-9a-f]{32}['|\"]",
            "GitHub": "[g|G][i|I][t|T][h|H][u|U][b|B].*['|\"][0-9a-zA-Z]{35,40}['|\"]",
            "Generic API Key": "[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].*['|\"][0-9a-zA-Z]{32,45}['|\"]",
            "Generic Secret": "[s|S][e|E][c|C][r|R][e|E][t|T].*['|\"][0-9a-zA-Z]{32,45}['|\"]",
            "Google API Key": "AIza[0-9A-Za-z\\-_]{35}",
            "Google Cloud Platform API Key": "AIza[0-9A-Za-z\\-_]{35}",
            "Google Cloud Platform OAuth": "[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com",
            "Google Drive API Key": "AIza[0-9A-Za-z\\-_]{35}",
            "Google Drive OAuth": "[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com",
            "Google (GCP) Service-account": "\"type\": \"service_account\"",
            "Google Gmail API Key": "AIza[0-9A-Za-z\\-_]{35}",
            "Google Gmail OAuth": "[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com",
            "Google OAuth Access Token": "ya29\\.[0-9A-Za-z\\-_]+",
            "Google YouTube API Key": "AIza[0-9A-Za-z\\-_]{35}",
            "Google YouTube OAuth": "[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com",
            "Heroku API Key": "[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}",
            "HockeyApp": "(?i)hockey.{0,50}(\\\"|'|`)?[0-9a-f]{32}(\\\"|'|`)?",
            "MailChimp API Key": "[0-9a-f]{32}-us[0-9]{1,2}",
            "Mailgun API Key": "key-[0-9a-zA-Z]{32}",
            "NuGet API Key": "oy2[a-z0-9]{43}",
            "Outlook team": "(https\\://outlook\\.office.com/webhook/[0-9a-f-]{36}\\@)",
            "Password in URL": "[a-zA-Z]{3,10}://[^/\\s:@]{3,20}:[^/\\s:@]{3,20}@.{1,100}[\"'\\s]",
            "PayPal Braintree Access Token": "access_token\\$production\\$[0-9a-z]{16}\\$[0-9a-f]{32}",
            "Picatic API Key": "sk_live_[0-9a-z]{32}",
            "Sauce Token": "(?i)sauce.{0,50}(\\\"|'|`)?[0-9a-f-]{36}(\\\"|'|`)?",
            "SendGrid API Key": "SG\\.[0-9A-Za-z\\-_]{22}\\.[0-9A-Za-z\\-_]{43}",
            "Slack Webhook": "https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}",
            "SonarQube Docs API Key": "(?i)sonar.{0,50}(\\\"|'|`)?[0-9a-f]{40}(\\\"|'|`)?",
            "SSH Password": "sshpass -p.*['|\\\"]",
            "StackHawk API Key": "hawk\\.[0-9A-Za-z\\-_]{20}\\.[0-9A-Za-z\\-_]{20}",
            "Stripe API Key": "sk_live_[0-9a-zA-Z]{24}",
            "Stripe Restricted API Key": "rk_live_[0-9a-zA-Z]{24}",
            "Square Access Token": "sq0atp-[0-9A-Za-z\\-_]{22}",
            "Square OAuth Secret": "sq0csp-[0-9A-Za-z\\-_]{43}",
            "Twilio API Key": "SK[0-9a-fA-F]{32}",
            "Twitter Access Token": "[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[1-9][0-9]+-[0-9a-zA-Z]{40}",
            "Twitter OAuth": "[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*['|\"][0-9a-zA-Z]{35,44}['|\"]"
        }
    }
  type: 12
  required: true
  additionalinfo: "Reference: https://github.com/eth0izzle/shhgit/blob/master/config.yaml and https://github.com/dxa4481/truffleHogRegexes/blob/master/truffleHogRegexes/regexes.json"
description: This is the GitHub Secrets Detection integration.
display: GitHub Secrets Detection
name: GitHubSecretsDetection
script:
  dockerimage: matthewkwong/xsoar-git-secrets-detection:latest
  isfetch: true
  longRunning: false
  longRunningPort: false
  runonce: false
  script: '-'
  subtype: python3
  type: python
defaultclassifier:
defaultmapperin:
